@model Restaurant.ViewModels.AllergyGroupFoodChain

<div class="container">

    <h1>Restaurants</h1>

    <form method="get">
        <div class="form-group">
            <p>
                Search By Restaurant Name: <input id="searchString" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /> |
                Select Allergy Group:
                @Html.DropDownList("allergyselect", new SelectList(Model.AllergyGroups, "GroupID", "GroupName"), new { @id = "groupSelect" })
                <input type="hidden" id="hiddenGroupSelect" name="selectedValue" value="@ViewData["selectedValue"]" />
                <input type="submit" value="Search" class="search-btn" /> |
                <a asp-action="AvoidAllergy">Back to Full List</a>
            </p>
        </div>
    </form>

    @foreach (var item in Model.FoodChains)
    {
        <div class="row border-top p-3">
            <div class="col-md-4 text-center">
                <h4>@Html.DisplayFor(modelItem => item.FoodChainName)</h4>
                <a class="btn btn-primary mt-3" asp-action="Details" asp-route-id="@item.FoodChainID">Details</a>
            </div>
            <div class="col-md-4">
                <h5>Description</h5><p>@Html.DisplayFor(modelItem => item.Description)</p>
                <h5>Restaurant Menu</h5>
                @if (item.MenuLink != null)
                {
                    <div class="justify-content-center">
                        <form method="post" asp-action="Download" asp-route-id="@item.FoodChainID">
                            <input type="submit" class="btn btn-dark" value="Download" />
                        </form>
                    </div>
                }
                else
                {
                    <div class="justify-content-center">
                        <p>No Menu Available</p>
                    </div>
                }
            </div>
            <div class="col-md-4">
                <p><strong>Gluten Free Options?</strong> @Html.DisplayFor(modelItem => item.GlutenFreeOptions)</p>
                <p><strong>Dairy Free Options?</strong> @Html.DisplayFor(modelItem => item.DairyFreeOptions)</p>
                <p><strong>Nut Free Options?</strong> @Html.DisplayFor(modelItem => item.NutFreeOptions)</p>
                <p><strong>Vegetarian Options?</strong> @Html.DisplayFor(modelItem => item.VegetarianOptions)</p>
                <p><strong>Vegan Options?</strong> @Html.DisplayFor(modelItem => item.VeganOptions)</p>
                <p><strong>Other Accommodations:</strong> @Html.DisplayFor(modelItem => item.OtherOptions)</p>
            </div>
        </div>
    }

</div>

<p class="d-none">@ViewData["AllergyNames"]</p>

@{
    var prevDisabled = !Model.FoodChains.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.FoodChains.HasNextPage ? "disabled" : "";
}

<a asp-action="AvoidAllergy"
   asp-route-pageNumber="@(Model.FoodChains.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-allergyselect="@ViewData["allergyselect"]"
   asp-route-selectedValue="@ViewData["selectedValue"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="AvoidAllergy"
   asp-route-pageNumber="@(Model.FoodChains.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-allergyselect="@ViewData["allergyselect"]"
   asp-route-selectedValue="@ViewData["selectedValue"]"
   class="btn btn-default @nextDisabled">
    Next
</a>